name: Run test suite

on:
  pull_request:

  push:
    branches:
      - main

jobs:
  tests:
    strategy:
      matrix:
        os: [ubuntu-latest]
        # NOTE: If bumping the minimum Python version here, also do it in
        # ruff.toml, setup.py and other CI files as well.

        # test with oldest and latest supported Python versions
        python-version: ["3.10", "3.13"]
        # test with oldest supported Python version only (for slow tests)
        # python-version: ["3.10"]
        # test with *all* supported Python versions
        # python-version: ["3.10", "3.11", "3.12", "3.13"]

      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
            # https://github.com/azure/login/tree/v2/?tab=readme-ov-file#creds
            creds: |
              {
                "clientId": "${{ secrets.PL_INTERNAL_TOOLS_AZ_CLIENT_ID }}",
                "clientSecret": "${{ secrets.PL_INTERNAL_TOOLS_AZ_CLIENT_SECRET }}",
                "subscriptionId": "${{ vars.PL_INTERNAL_TOOLS_AZ_CLIENT_SUB_ID }}",
                "tenantId": "${{ secrets.PL_INTERNAL_TOOLS_AZ_TENANT_ID }}"
              }

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get Download Token
        run: echo "DOWNLOAD_TOKEN=$(az account get-access-token --query accessToken -o tsv)" >> $GITHUB_ENV

      - name: Restore UV environment
        run: cp production.uv.lock uv.lock

      - name: Install dev requirements
        run: |
          uv sync --extra dev --frozen --index https://$DOWNLOAD_TOKEN@${{vars.PL_INTERNAL_PYPI_PULL_URL_NO_PROTOCOL}}

      - name: Run test suite
        run: |
          set -o pipefail
          uv run --no-sync pytest \
            --cov-report=term-missing:skip-covered \
            --cov-report=xml:coverage.xml \
            --cov=

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5.4.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: pasteurlabs/
          files: coverage*.xml
          fail_ci_if_error: true
